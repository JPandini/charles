{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport * as Font from 'expo-font';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ConectivosConc(_ref) {\n  var navigation = _ref.navigation;\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    fontLoaded = _React$useState2[0],\n    setFontLoaded = _React$useState2[1];\n  function loadFonts() {\n    return _loadFonts.apply(this, arguments);\n  }\n  function _loadFonts() {\n    _loadFonts = _asyncToGenerator(function* () {\n      yield Font.loadAsync({\n        'Pompiere': require(\"./assets/fonts/Pompiere.ttf\"),\n        'Rosario': require(\"./assets/fonts/Rosario.ttf\")\n      });\n      setFontLoaded(true);\n    });\n    return _loadFonts.apply(this, arguments);\n  }\n  React.useEffect(function () {\n    loadFonts();\n  }, []);\n  if (!fontLoaded) {\n    return null;\n  }\n  return _jsx(SafeAreaView, {\n    style: styles.container,\n    children: _jsx(LinearGradient, {\n      style: styles.container,\n      start: {\n        x: 1,\n        y: 0\n      },\n      end: {\n        x: 0,\n        y: 1\n      },\n      colors: ['#D77DFE', '#ECBBFF', '#D667FF'],\n      children: _jsx(ScrollView, {\n        contentContainerStyle: styles.txtestContainer,\n        children: _jsxs(View, {\n          style: styles.innerContainer,\n          children: [_jsx(Image, {\n            style: styles.img,\n            source: require(\"./assets/LogoS.png\")\n          }), _jsxs(Text, {\n            style: styles.texto,\n            children: [\"CONECTIVOS\", '\\n', \"CONCLUS\\xC3O\"]\n          }), _jsx(Text, {\n            style: styles.txtest,\n            children: _jsxs(Text, {\n              children: [\"Por isso\\u3164\\u3164\\u3164\\u3164\\u3164\\u3164\\u3164\\u3164\", '\\n\\n', \"Assim\", '\\n\\n', \"Assim sendo\", '\\n\\n', \"Ent\\xE3o\", '\\n\\n', \"Logo\", '\\n\\n', \"Enfim\", '\\n\\n', \"Portanto\", '\\n\\n', \"Em conclus\\xE3o\", '\\n\\n', \"Em s\\xEDntese\", '\\n\\n', \"Em resumo\", '\\n\\n', \"Em suma\", '\\n\\n', \"Para terminar\", '\\n\\n', \"Por \\xFAltimo\", '\\n\\n', \"Resumidamente\", '\\n\\n', \"Desse modo\", '\\n\\n', \"Dessa forma\", '\\n\\n', \"Dessa maneira\", '\\n\\n', \"Destarte\"]\n            })\n          })]\n        })\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#D166FF'\n  },\n  contentContainer: {\n    flexGrow: 1,\n    justifyContent: 'center'\n  },\n  innerContainer: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  img: {\n    height: '15%',\n    width: '50%',\n    marginTop: -50\n  },\n  texto: {\n    fontSize: 50,\n    fontFamily: 'Learners',\n    textAlign: 'center',\n    marginVertical: 10,\n    textShadowColor: '#000000',\n    textShadowOffset: {\n      width: 0,\n      height: 0\n    },\n    textShadowRadius: 1\n  },\n  texto2: {\n    fontSize: 15,\n    fontFamily: 'Rosario',\n    fontWeight: 'light',\n    textAlign: 'center',\n    textShadowColor: '#000000'\n  },\n  txtestContainer: {\n    maxHeight: '250%',\n    marginVertical: 30,\n    paddingHorizontal: 30,\n    borderColor: '#000'\n  },\n  txtest: {\n    backgroundColor: '#fff',\n    textAlign: 'justify',\n    fontSize: 25,\n    marginTop: 20,\n    padding: 20,\n    borderWidth: 2,\n    borderColor: 'black'\n  }\n});","map":{"version":3,"names":["StatusBar","React","LinearGradient","SafeAreaView","ScrollView","StyleSheet","Text","View","Image","TouchableOpacity","Font","jsx","_jsx","jsxs","_jsxs","ConectivosConc","_ref","navigation","_React$useState","useState","_React$useState2","_slicedToArray","fontLoaded","setFontLoaded","loadFonts","_loadFonts","apply","arguments","_asyncToGenerator","loadAsync","require","useEffect","style","styles","container","children","start","x","y","end","colors","contentContainerStyle","txtestContainer","innerContainer","img","source","texto","txtest","create","flex","backgroundColor","contentContainer","flexGrow","justifyContent","alignItems","height","width","marginTop","fontSize","fontFamily","textAlign","marginVertical","textShadowColor","textShadowOffset","textShadowRadius","texto2","fontWeight","maxHeight","paddingHorizontal","borderColor","padding","borderWidth"],"sources":["C:/Users/nicolas.146616/Documents/mari/ProjetosMobile/Charles.com-master/Charles.com-master/ConectivosConc.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { SafeAreaView, ScrollView, StyleSheet, Text, View, Image, TouchableOpacity } from 'react-native';\nimport * as Font from 'expo-font';\n\nexport default function ConectivosConc({ navigation }) {\n  const [fontLoaded, setFontLoaded] = React.useState(false);\n\n  async function loadFonts() {\n    await Font.loadAsync({\n      'Pompiere': require('./assets/fonts/Pompiere.ttf'),\n      'Rosario': require('./assets/fonts/Rosario.ttf'),\n    });\n\n    setFontLoaded(true);\n  }\n\n  React.useEffect(() => {\n    loadFonts();\n  }, []);\n\n  if (!fontLoaded) {\n    return null;\n  }\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <LinearGradient style={styles.container}\n        start={{ x: 1, y: 0 }}\n        end={{ x: 0, y: 1 }}\n        colors={['#D77DFE','#ECBBFF', '#D667FF']}>\n      <ScrollView contentContainerStyle={styles.txtestContainer}>\n        <View style={styles.innerContainer}>\n          <Image style={styles.img} source={require('./assets/LogoS.png')} />\n          <Text style={styles.texto}>CONECTIVOS{'\\n'}CONCLUSÃO</Text>\n          <Text style={styles.txtest}>\n          <Text>\n              Por issoㅤㅤㅤㅤㅤㅤㅤㅤ{'\\n\\n'}\n              Assim{'\\n\\n'}\n              Assim sendo{'\\n\\n'}\n              Então{'\\n\\n'}\n              Logo{'\\n\\n'}\n              Enfim{'\\n\\n'}\n              Portanto{'\\n\\n'}\n              Em conclusão{'\\n\\n'}\n              Em síntese{'\\n\\n'}\n              Em resumo{'\\n\\n'}\n              Em suma{'\\n\\n'}\n              Para terminar{'\\n\\n'}\n              Por último{'\\n\\n'}\n              Resumidamente{'\\n\\n'}\n              Desse modo{'\\n\\n'}\n              Dessa forma{'\\n\\n'}\n              Dessa maneira{'\\n\\n'}\n              Destarte\n            </Text>\n          </Text>\n        </View>\n      </ScrollView>\n      </LinearGradient>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#D166FF',\n  },\n  contentContainer: {\n    flexGrow: 1,\n    justifyContent: 'center',\n  },\n  innerContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  img: {\n    height: '15%',\n    width: '50%',\n    marginTop: -50,\n  },\n  texto: {\n    fontSize: 50,\n    fontFamily: 'Learners',\n    textAlign: 'center',\n    marginVertical: 10,\n    textShadowColor: '#000000',\n    textShadowOffset: { width: 0, height: 0 },\n    textShadowRadius: 1,\n  },\n  texto2: {\n    fontSize: 15,\n    fontFamily: 'Rosario',\n    fontWeight: 'light',\n    textAlign: 'center',\n    textShadowColor: '#000000',\n  },\n  txtestContainer: {\n    maxHeight: '250%',\n    marginVertical: 30,\n    paddingHorizontal: 30,\n    borderColor: '#000',\n  },\n  txtest: {\n    backgroundColor: '#fff',\n    textAlign: 'justify',\n    fontSize: 25,\n    marginTop: 20,\n    padding: 20,\n    borderWidth: 2,\n    borderColor: 'black',\n  },\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}