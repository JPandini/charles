{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport * as Font from 'expo-font';\nimport DicasHome from \"./DicasHome\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function DicasConc(_ref) {\n  var navigation = _ref.navigation;\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    fontLoaded = _React$useState2[0],\n    setFontLoaded = _React$useState2[1];\n  function loadFonts() {\n    return _loadFonts.apply(this, arguments);\n  }\n  function _loadFonts() {\n    _loadFonts = _asyncToGenerator(function* () {\n      yield Font.loadAsync({\n        'Pompiere': require(\"./assets/fonts/Pompiere.ttf\"),\n        'Rosario': require(\"./assets/fonts/Rosario.ttf\")\n      });\n      setFontLoaded(true);\n    });\n    return _loadFonts.apply(this, arguments);\n  }\n  React.useEffect(function () {\n    loadFonts();\n  }, []);\n  if (!fontLoaded) {\n    return null;\n  }\n  return _jsx(LinearGradient, {\n    style: styles.container,\n    start: {\n      x: 1,\n      y: 0\n    },\n    end: {\n      x: 0,\n      y: 1\n    },\n    colors: ['#D77DFE', '#ECBBFF', '#D667FF'],\n    children: _jsx(View, {\n      contentContainerStyle: styles.txtestContainer,\n      children: _jsxs(View, {\n        style: styles.innerContainer,\n        children: [_jsx(Image, {\n          style: styles.img,\n          source: require(\"./assets/LogoS.png\")\n        }), _jsx(Text, {\n          style: styles.texto,\n          children: \"Dicas Conclus\\xE3o\"\n        }), _jsx(Text, {\n          style: styles.txtest,\n          children: _jsx(Text, {\n            children: \"A conclus\\xE3o da reda\\xE7\\xE3o deve resumir os argumentos que foram levantados ao longo do texto. Sendo assim, deve fazer um apanhado geral e breve sobre o que foi discutido na reda\\xE7\\xE3o at\\xE9 ent\\xE3o. Al\\xE9m disso, \\xE9 interessante tamb\\xE9m trazer na conclus\\xE3o uma solu\\xE7\\xE3o ou proposta de interven\\xE7\\xE3o.\"\n          })\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.navigate(DicasHome);\n          },\n          style: styles.btn,\n          activeOpacity: 0.8,\n          children: _jsx(Text, {\n            style: styles.txtbtn,\n            children: \"\\u2190\"\n          })\n        })]\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#D166FF'\n  },\n  contentContainer: {\n    flexGrow: 1,\n    justifyContent: 'center'\n  },\n  innerContainer: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  img: {\n    height: '38%',\n    width: '50%'\n  },\n  texto: {\n    fontSize: 40,\n    fontFamily: 'Learners',\n    textAlign: 'center',\n    textShadowColor: '#000000',\n    textShadowOffset: {\n      width: 0,\n      height: 0\n    },\n    textShadowRadius: 1.3\n  },\n  txtestContainer: {\n    maxHeight: '230%',\n    marginVertical: 30,\n    paddingHorizontal: 20,\n    borderColor: '#000'\n  },\n  txtest: {\n    backgroundColor: '#fff',\n    textAlign: 'justify',\n    fontSize: 18,\n    marginHorizontal: '10%',\n    marginTop: '10%',\n    padding: 20,\n    borderWidth: 2,\n    borderColor: 'black'\n  },\n  txtverde: {\n    color: '#090'\n  },\n  btn: {\n    padding: 15,\n    paddingHorizontal: 20,\n    backgroundColor: '#ffffff',\n    borderRadius: 40,\n    borderColor: '#000',\n    borderWidth: 2,\n    marginTop: 30,\n    marginBottom: 10\n  },\n  txtbtn: {\n    fontSize: 40,\n    color: '#D166FF',\n    textAlign: 'center',\n    textShadowColor: '#D166FF',\n    textShadowOffset: {\n      width: 0,\n      height: 0\n    },\n    textShadowRadius: 4\n  }\n});","map":{"version":3,"names":["StatusBar","React","LinearGradient","SafeAreaView","ScrollView","StyleSheet","Text","View","Image","TouchableOpacity","Font","DicasHome","jsx","_jsx","jsxs","_jsxs","DicasConc","_ref","navigation","_React$useState","useState","_React$useState2","_slicedToArray","fontLoaded","setFontLoaded","loadFonts","_loadFonts","apply","arguments","_asyncToGenerator","loadAsync","require","useEffect","style","styles","container","start","x","y","end","colors","children","contentContainerStyle","txtestContainer","innerContainer","img","source","texto","txtest","onPress","navigate","btn","activeOpacity","txtbtn","create","flex","backgroundColor","contentContainer","flexGrow","justifyContent","alignItems","height","width","fontSize","fontFamily","textAlign","textShadowColor","textShadowOffset","textShadowRadius","maxHeight","marginVertical","paddingHorizontal","borderColor","marginHorizontal","marginTop","padding","borderWidth","txtverde","color","borderRadius","marginBottom"],"sources":["C:/Users/nicolas.146616/Documents/mari/ProjetosMobile/Charles.com-master/Charles.com-master/DicasConc.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport React from 'react';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport { SafeAreaView, ScrollView, StyleSheet, Text, View, Image, TouchableOpacity } from 'react-native';\r\nimport * as Font from 'expo-font';\r\n\r\nimport DicasHome from './DicasHome'\r\n\r\nexport default function DicasConc({ navigation }) {\r\n  const [fontLoaded, setFontLoaded] = React.useState(false);\r\n\r\n  async function loadFonts() {\r\n    await Font.loadAsync({\r\n      'Pompiere': require('./assets/fonts/Pompiere.ttf'),\r\n      'Rosario': require('./assets/fonts/Rosario.ttf'),\r\n    });\r\n\r\n    setFontLoaded(true);\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    loadFonts();\r\n  }, []);\r\n\r\n  if (!fontLoaded) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n      <LinearGradient style={styles.container}\r\n        start={{ x: 1, y: 0 }}\r\n        end={{ x: 0, y: 1 }}\r\n        colors={['#D77DFE','#ECBBFF', '#D667FF']}>\r\n      <View contentContainerStyle={styles.txtestContainer}>\r\n        <View style={styles.innerContainer}>\r\n          <Image style={styles.img} source={require('./assets/LogoS.png')} />\r\n          <Text style={styles.texto}>Dicas Conclusão</Text>\r\n          <Text style={styles.txtest}>\r\n            <Text>A conclusão da redação deve resumir os argumentos que foram levantados ao longo do texto. Sendo assim, deve fazer um apanhado geral e breve sobre o que foi discutido na redação até então. Além disso, é interessante também trazer na conclusão uma solução ou proposta de intervenção.</Text>\r\n          </Text>\r\n          <TouchableOpacity\r\n            onPress={() => navigation.navigate(DicasHome)}\r\n            style={styles.btn}\r\n            activeOpacity={0.8}>\r\n            <Text style={styles.txtbtn}>←</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n      </LinearGradient>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#D166FF',\r\n  },\r\n  contentContainer: {\r\n    flexGrow: 1,\r\n    justifyContent: 'center',\r\n  },\r\n  innerContainer: {\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  img: {\r\n    height: '38%',\r\n    width: '50%',\r\n  },\r\n  texto: {\r\n    fontSize: 40,\r\n    fontFamily: 'Learners',\r\n    textAlign: 'center',\r\n    textShadowColor: '#000000',\r\n    textShadowOffset: { width: 0, height: 0 },\r\n    textShadowRadius: 1.3,\r\n  },\r\n  txtestContainer: {\r\n    maxHeight: '230%',\r\n    marginVertical: 30,\r\n    paddingHorizontal: 20,\r\n    borderColor: '#000',\r\n  },\r\n  txtest: {\r\n    backgroundColor: '#fff',\r\n    textAlign: 'justify',\r\n    fontSize: 18,\r\n    marginHorizontal: '10%',\r\n    marginTop: '10%',\r\n    padding: 20,\r\n    borderWidth: 2,\r\n    borderColor: 'black',\r\n  },\r\n  txtverde: {\r\n    color: '#090',\r\n  },\r\n  btn: {\r\n    padding: 15,\r\n    paddingHorizontal: 20,\r\n    backgroundColor: '#ffffff',\r\n    borderRadius: 40,\r\n    borderColor: '#000',\r\n    borderWidth: 2,\r\n    marginTop: 30,\r\n    marginBottom: 10,\r\n  },\r\n  txtbtn: {\r\n    fontSize: 40,\r\n    color: '#D166FF',\r\n    textAlign: 'center',\r\n    textShadowColor: '#D166FF',\r\n    textShadowOffset: { width: 0, height: 0 },\r\n    textShadowRadius: 4,\r\n  },\r\n});\r\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,QAAQ,sBAAsB;AAAC,OAAAC,YAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,gBAAA;AAEtD,OAAO,KAAKC,IAAI,MAAM,WAAW;AAEjC,OAAOC,SAAS;AAAmB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEnC,eAAe,SAASC,SAASA,CAAAC,IAAA,EAAiB;EAAA,IAAdC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAC5C,IAAAC,eAAA,GAAoClB,KAAK,CAACmB,QAAQ,CAAC,KAAK,CAAC;IAAAC,gBAAA,GAAAC,cAAA,CAAAH,eAAA;IAAlDI,UAAU,GAAAF,gBAAA;IAAEG,aAAa,GAAAH,gBAAA;EAA0B,SAE3CI,SAASA,CAAA;IAAA,OAAAC,UAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EAAA,SAAAF,WAAA;IAAAA,UAAA,GAAAG,iBAAA,CAAxB,aAA2B;MACzB,MAAMnB,IAAI,CAACoB,SAAS,CAAC;QACnB,UAAU,EAAEC,OAAO,8BAA8B,CAAC;QAClD,SAAS,EAAEA,OAAO,6BAA6B;MACjD,CAAC,CAAC;MAEFP,aAAa,CAAC,IAAI,CAAC;IACrB,CAAC;IAAA,OAAAE,UAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EAED3B,KAAK,CAAC+B,SAAS,CAAC,YAAM;IACpBP,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,IAAI,CAACF,UAAU,EAAE;IACf,OAAO,IAAI;EACb;EAEA,OACIV,IAAA,CAACX,cAAc;IAAC+B,KAAK,EAAEC,MAAM,CAACC,SAAU;IACtCC,KAAK,EAAE;MAAEC,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE;IAAE,CAAE;IACtBC,GAAG,EAAE;MAAEF,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE;IAAE,CAAE;IACpBE,MAAM,EAAE,CAAC,SAAS,EAAC,SAAS,EAAE,SAAS,CAAE;IAAAC,QAAA,EAC3C5B,IAAA,CAACN,IAAI;MAACmC,qBAAqB,EAAER,MAAM,CAACS,eAAgB;MAAAF,QAAA,EAClD1B,KAAA,CAACR,IAAI;QAAC0B,KAAK,EAAEC,MAAM,CAACU,cAAe;QAAAH,QAAA,GACjC5B,IAAA,CAACL,KAAK;UAACyB,KAAK,EAAEC,MAAM,CAACW,GAAI;UAACC,MAAM,EAAEf,OAAO,qBAAqB;QAAE,CAAE,CAAC,EACnElB,IAAA,CAACP,IAAI;UAAC2B,KAAK,EAAEC,MAAM,CAACa,KAAM;UAAAN,QAAA,EAAC;QAAe,CAAM,CAAC,EACjD5B,IAAA,CAACP,IAAI;UAAC2B,KAAK,EAAEC,MAAM,CAACc,MAAO;UAAAP,QAAA,EACzB5B,IAAA,CAACP,IAAI;YAAAmC,QAAA,EAAC;UAAyR,CAAM;QAAC,CAClS,CAAC,EACP5B,IAAA,CAACJ,gBAAgB;UACfwC,OAAO,EAAE,SAAAA,QAAA;YAAA,OAAM/B,UAAU,CAACgC,QAAQ,CAACvC,SAAS,CAAC;UAAA,CAAC;UAC9CsB,KAAK,EAAEC,MAAM,CAACiB,GAAI;UAClBC,aAAa,EAAE,GAAI;UAAAX,QAAA,EACnB5B,IAAA,CAACP,IAAI;YAAC2B,KAAK,EAAEC,MAAM,CAACmB,MAAO;YAAAZ,QAAA,EAAC;UAAC,CAAM;QAAC,CACpB,CAAC;MAAA,CACf;IAAC,CACH;EAAC,CACS,CAAC;AAEvB;AAEA,IAAMP,MAAM,GAAG7B,UAAU,CAACiD,MAAM,CAAC;EAC/BnB,SAAS,EAAE;IACToB,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE;EACnB,CAAC;EACDC,gBAAgB,EAAE;IAChBC,QAAQ,EAAE,CAAC;IACXC,cAAc,EAAE;EAClB,CAAC;EACDf,cAAc,EAAE;IACdgB,UAAU,EAAE,QAAQ;IACpBD,cAAc,EAAE;EAClB,CAAC;EACDd,GAAG,EAAE;IACHgB,MAAM,EAAE,KAAK;IACbC,KAAK,EAAE;EACT,CAAC;EACDf,KAAK,EAAE;IACLgB,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,UAAU;IACtBC,SAAS,EAAE,QAAQ;IACnBC,eAAe,EAAE,SAAS;IAC1BC,gBAAgB,EAAE;MAAEL,KAAK,EAAE,CAAC;MAAED,MAAM,EAAE;IAAE,CAAC;IACzCO,gBAAgB,EAAE;EACpB,CAAC;EACDzB,eAAe,EAAE;IACf0B,SAAS,EAAE,MAAM;IACjBC,cAAc,EAAE,EAAE;IAClBC,iBAAiB,EAAE,EAAE;IACrBC,WAAW,EAAE;EACf,CAAC;EACDxB,MAAM,EAAE;IACNQ,eAAe,EAAE,MAAM;IACvBS,SAAS,EAAE,SAAS;IACpBF,QAAQ,EAAE,EAAE;IACZU,gBAAgB,EAAE,KAAK;IACvBC,SAAS,EAAE,KAAK;IAChBC,OAAO,EAAE,EAAE;IACXC,WAAW,EAAE,CAAC;IACdJ,WAAW,EAAE;EACf,CAAC;EACDK,QAAQ,EAAE;IACRC,KAAK,EAAE;EACT,CAAC;EACD3B,GAAG,EAAE;IACHwB,OAAO,EAAE,EAAE;IACXJ,iBAAiB,EAAE,EAAE;IACrBf,eAAe,EAAE,SAAS;IAC1BuB,YAAY,EAAE,EAAE;IAChBP,WAAW,EAAE,MAAM;IACnBI,WAAW,EAAE,CAAC;IACdF,SAAS,EAAE,EAAE;IACbM,YAAY,EAAE;EAChB,CAAC;EACD3B,MAAM,EAAE;IACNU,QAAQ,EAAE,EAAE;IACZe,KAAK,EAAE,SAAS;IAChBb,SAAS,EAAE,QAAQ;IACnBC,eAAe,EAAE,SAAS;IAC1BC,gBAAgB,EAAE;MAAEL,KAAK,EAAE,CAAC;MAAED,MAAM,EAAE;IAAE,CAAC;IACzCO,gBAAgB,EAAE;EACpB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}